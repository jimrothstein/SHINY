# No imputation for partial date
res =derive_vars_dt(
mhdt,
new_vars_prefix = "AST",
dtc = MHSTDTC
)
if (interactive()) {                   #
# table example
shinyApp(
ui = fluidPage(
fluidRow(
column(12,
tableOutput('table')
)
),
fluidRow(
column(12,
tableOutput('table1')
)
),
server = function(input, output) {
output$table <- renderTable(mhdt)
output$table1 <- renderTable(res)
}
)
}
# table example
shinyApp(
ui = fluidPage(
h3("derive_advs_dt.R"),
textOutput('version'),
fluidRow(
column(12,
tableOutput('table')
)
),
fluidRow(
column(12,
tableOutput('table1')
)
),
server = function(input, output) {
output$table <- renderTable(mhdt)
output$table1 <- renderTable(res)
}
)
# PURPOSE:   Examples of how derive_vars_dt processes tibbles.
library(shiny)
library(admiral)
library(lubridate)
# table for testing
mhdt <- tribble(
~MHSTDTC,
"2019-07-18T15:25:40",
"2019-07-18T15:25",
"2019-07-18",
"2019-02",
"2019",
"2019---07",
""
)
# Create ASTDT and ASTDTF
# No imputation for partial date
res =derive_vars_dt(
mhdt,
new_vars_prefix = "AST",
dtc = MHSTDTC
)
ui = fluidPage(
h3("Version5"),
textOutput('version'),
plotOutput('temp'),
tableOutput('table'),
)
if (interactive()) {                   #
# table example
shinyApp(
ui = fluidPage(
h3("derive_advs_dt.R"),
textOutput('version'),
fluidRow(
column(12,
tableOutput('table')
)
),
fluidRow(
column(12,
tableOutput('table1')
)
),
server = function(input, output) {
output$table <- renderTable(mhdt)
output$table1 <- renderTable(res)
}
)
}
# PURPOSE:   Examples of how derive_vars_dt processes tibbles.
library(shiny)
library(admiral)
source("~/code/SHINY/dervie_advs_dt.R")
if (interactive()) {                   #
# table example
shinyApp(
ui = fluidPage(
h3("derive_advs_dt.R"),
textOutput('version'),
fluidRow(
column(12,
tableOutput('table')
)
),
fluidRow(
column(12,
tableOutput('table1')
)
),
server = function(input, output) {
output$table <- renderTable(mhdt)
output$table1 <- renderTable(res)
}
)
}
source("~/code/SHINY/dervie_advs_dt.R")
# table example
shinyApp(
ui = fluidPage(
h3("Working with derive_advs_dt.R"),
textOutput('version'),
tags$h3("Third level heading"),
tags$br(),
tags$a("This app is built with Shiny.", href = "https://shiny.posit.co/"),
tags$br(),
# embed your html yourself
HTML("hello </br> world"),
fluidRow(
column(12,
tableOutput('table')
)
),
fluidRow(
column(12,
tableOutput('table1')
)
),
server = function(input, output) {
output$table <- renderTable(mhdt)
output$table1 <- renderTable(res)
}
)
?dervive_vars_dt
derive_vars_dt
?derive_vars_dt
source("~/code/SHINY/dervie_advs_dt.R")
# Create ASTDT and ASTDTF
# No imputation for partial date
res =derive_vars_dt(
mhdt,
new_vars_prefix = "AST",
dtc = MHSTDTC,
highest_imputation="M"     # default=n
)
if (interactive()) {                   #
# table example
shinyApp(
ui = fluidPage(
h3("Working with derive_advs_dt.R"),
textOutput('version'),
tags$h3("Third level heading"),
tags$br(),
tags$a("This app is built with Shiny.", href = "https://shiny.posit.co/"),
tags$br(),
# embed your html yourself
HTML("hello </br> world"),
fluidRow(
column(12,
tableOutput('table')
)
),
fluidRow(
column(12,
tableOutput('table1')
)
),
server = function(input, output) {
output$table <- renderTable(mhdt)
output$table1 <- renderTable(res)
}
)
}
res2 =derive_vars_dt(
mhdt,
new_vars_prefix = "AST",
dtc = MHSTDTC,
highest_imputation="M"
)
source("~/code/SHINY/dervie_advs_dt.R")
res1
res2
res1
res2 =derive_vars_dt(
mhdt,
new_vars_prefix = "AST",
dtc = MHSTDTC,
highest_imputation="M"
)
if (interactive()) {                   #
# table example
shinyApp(
ui = fluidPage(
h3("Working with derive_advs_dt.R"),
textOutput('version'),
tags$h3("Third level heading"),
tags$br(),
tags$a("This app is built with Shiny.", href = "https://shiny.posit.co/"),
tags$br(),
# embed your html yourself
HTML("hello </br> world"),
fluidRow(
column(12,
tableOutput('table1')
)
),
fluidRow(
column(12,
tableOutput('table2')
),
fluidRow(
column(12,
tableOutput('table3')
)
),
server = function(input, output) {
output$table1<- renderTable(mhdt)
output$table2 <- renderTable(res1)
output$table3 <- renderTable(res2)
}
)
}
# PURPOSE:   Examples of how derive_vars_dt processes tibbles.
library(shiny)
library(admiral)
library(lubridate)
# table for testing
mhdt <- tribble(
~MHSTDTC,
"2019-07-18T15:25:40",
"2019-07-18T15:25",
"2019-07-18",
"2019-02",
"2019",
"2019---07",
""
)
# Create ASTDT and ASTDTF
# No imputation for partial date
res1 =derive_vars_dt(
mhdt,
new_vars_prefix = "AST",
dtc = MHSTDTC,
highest_imputation="n"   # default
)
res2 =derive_vars_dt(
mhdt,
new_vars_prefix = "AST",
dtc = MHSTDTC,
highest_imputation="M"
)
if (interactive()) {                   #
# table example
shinyApp(
ui = fluidPage(
h3("Working with derive_advs_dt.R"),
textOutput('version'),
tags$h3("Third level heading"),
tags$br(),
tags$a("This app is built with Shiny.", href = "https://shiny.posit.co/"),
tags$br(),
# embed your html yourself
HTML("hello </br> world"),
fluidRow(
column(12,
tableOutput('table1')
)
),
tags$h3("Highest Imputation= n, default"),
fluidRow(
column(12,
tableOutput('table2')
),
fluidRow(
column(12,
tableOutput('table3')
)
),
server = function(input, output) {
output$table1<- renderTable(mhdt)
output$table2 <- renderTable(res1)
output$table3 <- renderTable(res2)
}
)
}
# PURPOSE:   Examples of how derive_vars_dt processes tibbles.
library(shiny)
library(admiral)
library(lubridate)
# table for testing
mhdt <- tribble(
~MHSTDTC,
"2019-07-18T15:25:40",
"2019-07-18T15:25",
"2019-07-18",
"2019-02",
"2019",
"2019---07",
""
)
# Create ASTDT and ASTDTF
# No imputation for partial date
res1 =derive_vars_dt(
mhdt,
new_vars_prefix = "AST",
dtc = MHSTDTC,
highest_imputation="n"   # default
)
res2 =derive_vars_dt(
mhdt,
new_vars_prefix = "AST",
dtc = MHSTDTC,
highest_imputation="M"
)
if (interactive()) {                   #
# table example
shinyApp(
ui = fluidPage(
h3("Working with derive_advs_dt.R"),
textOutput('version'),
tags$h3("Third level heading"),
tags$br(),
tags$a("This app is built with Shiny.", href = "https://shiny.posit.co/"),
tags$br(),
# embed your html yourself
HTML("hello </br> world"),
fluidRow(
column(12,
tableOutput('table1')
)
),
tags$h4("Highest Imputation= n, default"),
fluidRow(
column(12,
tableOutput('table2')
),
tags$h4("Highest Imputation= M"),
fluidRow(
column(12,
tableOutput('table3')
)
),
server = function(input, output) {
output$table1<- renderTable(mhdt)
output$table2 <- renderTable(res1)
output$table3 <- renderTable(res2)
}
)
}
source("~/code/SHINY/dervie_advs_dt.R")
if (interactive()) {                   #
# table example
shinyApp(
ui = fluidPage(
h3("Working with derive_advs_dt.R"),
textOutput('version'),
tags$h3("Third level heading"),
tags$br(),
tags$a("This app is built with Shiny.", href = "https://shiny.posit.co/"),
tags$br(),
# embed your html yourself
HTML("hello </br> world"),
fluidRow(
column(12,
tableOutput('table1')
)
),
tags$h4("Highest Imputation= n, default"),
tags$h5('highest_imputation </br>
Highest imputation level</br>
The highest_imputation argument controls which components of the DTC value are imputed if they are missing. All components up to the specified level are imputed.
If a component at a higher level than the highest imputation level is missing, NA_character_ is returned. For example, for highest_imputation = "D" "2020" results in NA_character_ because the month is missing.
If "n" is specified no imputation is performed, i.e., if any component is missing, NA_character_ is returned.
If "Y" is specified, date_imputation should be "first" or "last" and min_dates or max_dates should be specified respectively. Otherwise, NA_character_ is returned if the year component is missing.
Permitted Values: "Y" (year, highest level), "M" (month), "D" (day), "n" (none, lowest level)) '),
fluidRow(
column(12,
tableOutput('table2')
),
tags$h4("Highest Imputation= M"),
fluidRow(
column(12,
tableOutput('table3')
)
),
server = function(input, output) {
output$table1<- renderTable(mhdt)
output$table2 <- renderTable(res1)
output$table3 <- renderTable(res2)
}
)
}
if (interactive()) {                   #
# table example
shinyApp(
ui = fluidPage(
h3("Working with derive_advs_dt.R"),
textOutput('version'),
tags$h3("Third level heading"),
tags$br(),
tags$a("This app is built with Shiny.", href = "https://shiny.posit.co/"),
tags$br(),
# embed your html yourself
HTML("hello </br> world"),
fluidRow(
column(12,
tableOutput('table1')
)
),
tags$h4("Highest Imputation= n, default"),
tags$h5('highest_imputation </br>
Highest imputation level</br>
The highest_imputation argument controls which components of the DTC value are imputed if they are missing. All components up to the specified level are imputed.
If a component at a higher level than the highest imputation level is missing, NA_character_ is returned. For example, for highest_imputation = "D" "2020" results in NA_character_ because the month is missing.
If "n" is specified no imputation is performed, i.e., if any component is missing, NA_character_ is returned.
If "Y" is specified, date_imputation should be "first" or "last" and min_dates or max_dates should be specified respectively. Otherwise, NA_character_ is returned if the year component is missing.
Permitted Values: "Y" (year, highest level), "M" (month), "D" (day), "n" (none, lowest level)) '),
fluidRow(
column(12,
tableOutput('table2')
),
tags$h4("Highest Imputation= D"),
fluidRow(
column(12,
tableOutput('table3')
)
),
server = function(input, output) {
output$table1<- renderTable(mhdt)
output$table2 <- renderTable(res1)
output$table3 <- renderTable(res2)
}
)
}
?admiral::derive_advs_dt.R
source("~/code/SHINY/dervie_advs_dt.R")
?admiral::derive_advs_dt
?admiral::derive_vars_dt
source("~/code/SHINY/dervie_advs_dt.R")
# Create ASTDT and ASTDTF
# No imputation for partial date
res1 =derive_vars_dt(
mhdt,
new_vars_prefix = "AST",
dtc = MHSTDTC,
highest_imputation="n",   # default
flag_imputation="auto"   # default, "date", "none"
)
res2 =derive_vars_dt(
mhdt,
new_vars_prefix = "AST",
dtc = MHSTDTC,
highest_imputation="M"
)
if (interactive()) {                   #
# table example
shinyApp(
ui = fluidPage(
h3("Working with derive_advs_dt.R"),
textOutput('version'),
tags$h3("Third level heading"),
tags$br(),
tags$a("This app is built with Shiny.", href = "https://shiny.posit.co/"),
tags$br(),
# embed your html yourself
HTML("hello </br> world"),
fluidRow(
column(12,
tableOutput('table1')
)
),
tags$h4("Highest Imputation= n, default"),
tags$h5('highest_imputation </br>
Highest imputation level</br>
The highest_imputation argument controls which components of the DTC value are imputed if they are missing. All components up to the specified level are imputed.
If a component at a higher level than the highest imputation level is missing, NA_character_ is returned. For example, for highest_imputation = "D" "2020" results in NA_character_ because the month is missing.
If "n" is specified no imputation is performed, i.e., if any component is missing, NA_character_ is returned.
If "Y" is specified, date_imputation should be "first" or "last" and min_dates or max_dates should be specified respectively. Otherwise, NA_character_ is returned if the year component is missing.
Permitted Values: "Y" (year, highest level), "M" (month), "D" (day), "n" (none, lowest level)) '),
fluidRow(
column(12,
tableOutput('table2')
),
tags$h4("Highest Imputation= D"),
fluidRow(
column(12,
tableOutput('table3')
)
),
server = function(input, output) {
output$table1<- renderTable(mhdt)
output$table2 <- renderTable(res1)
output$table3 <- renderTable(res2)
}
)
}
