library(shiny); runApp('100_first_shiny.R')
fluidPage(){
fluidPage(){
fluidPage(
sliderInput(inputId = "number",
label = "Select a number",
value = 500, min = 25, max = 1000),
plotOutput("hist")
)
library(shiny)
fluidPage(
sliderInput(inputId = "number",
label = "Select a number",
value = 500, min = 25, max = 1000),
plotOutput("hist")
)
shinyApp(ui = ui, server = server)
runApp('Schmuller_BOOK/UniformRandom')
runApp('Schmuller_BOOK/UniformRandom')
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
plotOutput("plot", click = "plot_click"),
tableOutput("data")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
plot(mtcars$wt, mtcars$mpg)
}, res = 96)
##  input$plot_click is event object; in particular x, y values
output$data <- renderTable({
nearPoints(mtcars, input$plot_click, xvar = "wt", yvar = "mpg", allRows =TRUE)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
plotOutput("plot", click = "plot_click"),
tableOutput("data")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(mtcars, aes(wt, mpg)) + geom_point()
}, res = 96)
output$data <- renderTable({
req(input$plot_click)
nearPoints(mtcars, input$plot_click)
})
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
plotOutput("plot", click = "plot_click"),
tableOutput("data")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(mtcars, aes(wt, mpg)) + geom_point()
}, res = 96)
output$data <- renderTable({
req(input$plot_click)
nearPoints(mtcars, input$plot_click)
})
}
shinyApp(ui, server)
options(shiny.autoload.r = TRUE)
shinyApp(ui, server)
library(shiny)
library(ggplot2)
ui <- fluidPage(
plotOutput("plot", click = "plot_click"),
tableOutput("data")
)
## Choose 1,  base R plot, OR
server <- function(input, output, session) {
output$plot <- renderPlot({
plot(mtcars$wt, mtcars$mpg)
}, res = 96)
##  input$plot_click is event object; in particular x, y values
## allRows = TRUE, entire database, with selected point marked TRUE
output$data <- renderTable({
nearPoints(mtcars, input$plot_click, xvar = "wt", yvar = "mpg", allRows =TRUE)
})
}
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(mtcars, aes(wt, mpg)) + geom_point()
}, res = 96)
output$data <- renderTable({
req(input$plot_click)
nearPoints(mtcars, input$plot_click, allRows=TRUE)
})
}
options(shiny.autoload.r = TRUE)
shinyApp(ui, server)
output$data <- renderTable({
req(input$plot_click)
#    nearPoints(mtcars, input$plot_click, allRows=TRUE)
nearPoints(mtcars, input$plot_click)
})
set.seed(1014)
df <- data.frame(x = rnorm(100), y = rnorm(100))
ui <- fluidPage(
plotOutput("plot", click = "plot_click", )
)
sf
df
server <- function(input, output, session) {
dist <- reactiveVal(rep(1, nrow(df)))
browser()
observeEvent(input$plot_click,
dist(nearPoints(df, input$plot_click, allRows = TRUE, addDist = TRUE)$dist_)
)
output$plot <- renderPlot({
df$dist <- dist()
ggplot(df, aes(x, y, size = dist)) +
geom_point() +
scale_size_area(limits = c(0, 1000), max_size = 10, guide = NULL)
}, res = 96)
}
options(shiny.autoload.r = TRUE)
shinyApp(ui, server)
df
dist
C
set.seed(1014)
df <- data.frame(x = rnorm(100), y = rnorm(100))
ui <- fluidPage(
plotOutput("plot", click = "plot_click", )
)
server <- function(input, output, session) {
dist <- reactiveVal(rep(1, nrow(df)))
browser()
observeEvent(input$plot_click,
dist(nearPoints(df, input$plot_click, allRows = TRUE, addDist = TRUE)$dist_)
)
output$plot <- renderPlot({
df$dist <- dist()
ggplot(df, aes(x, y, size = dist)) +
geom_point() +
scale_size_area(limits = c(0, 1000), max_size = 10, guide = NULL)
}, res = 96)
}
options(shiny.autoload.r = TRUE)
shinyApp(ui, server)
dist
dist()
q
dist()
